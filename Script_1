#### Introduction à la science des données avec R ####
# ____ Master 1 ____ #
# __ 2023 - 2024 __ #


#### Sommaire :                            ####

# ___ 1. Charger ses propres données
# ___ 2. Manipuler ses données
            # EXERCICE 1
# ___ 3. Décrire ses données
#       3.1. Paramètres de position
#       3.2. Paramètres de dispersion
            # EXERCICE 2
# ___ 4. Représenter graphiquement ses données
#       4.1. Données catégorielles
            # EXERCICE 3
#       4.2. Données continues
#          - Univariées
            # EXERCICE 4
#          - Bivariées
            # EXERCICE 5
#     5. Supplément : descriptions supplémentaires et réflexions


# Dataset disponible au lien suivant : 
https://osf.io/gfmwv/
  
  # Mot de passe du dataset : 
x

#### ____ Introduction au packages ____ ####

# Pour télécharger un tout nouveau package sur l'ordinateur (e.g., prettyR) : 

#         install.packages("ggrain") # A REALISER QU'UNE SEULE FOIS SUR L'ORDINATEUR

# Une fois téléchargé dans la librairie, il faut l'appeler :

library(prettyR) # A chaque ouverture de session de RStudio, il faudra appeler le package si on veut utiliser ses fonctions


#### ____ 1. Charges ses propres données ____ ####

dt = read.csv("C:\\Users\\XXXX\\nom_basededonnee.csv",
              header = TRUE,    # Indique que la première ligne du fichier = entêtes
              sep = ";",        # Symbole de séparation des cellules
              dec = ",")        # Symbole de décimale

# On vérifie que tout est bon ? 

summary(dt$BMI)


#### ____ 2. Manipuler ses données ____ ####

# L'objet " dt " est une matric comprenant nos données
# A quoi ressemble ma base de données

nrow(dt)    # Combien de LIGNE y a t-il ?
ncol(dt)    # Combien de COLONNE y a t-il ?


# La matrice est ordonnée de la manière suivante : 
# dt        =    [ LIGNE , COLONNE ]
# Exemple : 

# Je veux isoler la LIGNE 124

dt124 = dt[124 , ]     # L'objet dt124 contient la LIGNE 124
dt124

# Je veux isoler toutes les LIGNES de l'individu 67

Indiv67 = dt[dt$PatientId==67 , ]      # Attention, la recherche de text requière des guillemets : dt$COLONNE == "texte"
Indiv67

# Et je veux résumer les informations de l'invididu choisi

summary(Indiv67)

# Maintenant, je veux analyser une seule information de la base : l'âge
# Je dois donc isoler la COLONNE "Age"

# 1- Je peux l'appeler directement
colAge = dt$Age
colAge    

# 2- Ou je peux trouver son numéro de colonne

id <- which(colnames(dt)=='Age')    # Pratique quand on veux plusieurs colonnes à la suite (e.g., matrices)
colAge = dt[,id]
colAge

# Et si je veux conserver plusieurs COLONNES à la fois 
# Je peux créer une liste (un vecteur) de nom de COLONNE en créant

anthropoDT = dt[, c("Age","Sex","Height","Weight")]


# Pour créer une nouvelle colonne, par exemple en transformant le force de Handgrip (kg) en Newton

ncol(dt)
dt$HandgripN = dt$Handgrip * 9.81
ncol(dt)                      # J'ai une colonne de plus (à la fin), qui porte le nom "HandgripN"
summary(dt$HandgripN)         # Je peux la résumer

# Je peux également identifier s'il manque des donnes "NA"

missing_HG = is.na(dt$HandgripN)    # TRUE = Missing, FALSE = Present
table(missing_HG)["FALSE"]          # How many available data ?


#### ---- EXERCICE n°1 ---- ####
# Introduction aux conditions logiques

# Combien de femmes ont plus de 80 ans ? 

# Et combien d'hommes ont plus de 80 ans et un IMC >= 35

#### ____ 3. Décrire ses données ____ ####

# Pour décrire ses données, on peux utiliser des paramètres de position
# e.g., moyenne, médiane, quartiles

## A) La MOYENNE ##
# Solution 1 : Pratique, et efficace

summary(dt$Age)    

# Solution 2 : Utile quand on ne veux qu'une valeur

mean(dt$Handgrip, na.rm = TRUE)  # na.rm : TRUE, permet de ne pas bloquer en cas de donnée manquante (e.g., Handgrip)

# Solution 3 : Mathématique

sum(dt$Age) / length(dt$Age)

## B) La médiane ##

median(dt$Age)

## C) Les QUARTILES ##

quantile(dt$BMI, na.rm = TRUE)     # na.rm = TRUE obligatoire, car aucune valeur manquante n'est autorisé

quantile(dt$BMI, 
         prob=c(.25,.5,.75),
         na.rm = TRUE)

QUART = quantile(dt$BMI,  prob=c(.25,.5,.75), na.rm = TRUE)        # On arrondi, c'est plus clair

round(QUART,2)

## Description intelligente et multiple ##

library(prettyR)

describe(dt$Age, num.desc=c("mean","median","sd")) # num.desc = c("mean","median","var","sd","valid.n")

# Pour calculer une information en fonction de groupe
# Ici, l'age MOYEN et l'ECART-TYPE en fonction du sex :

tapply(dt$Age, dt$Sex, "mean", na.rm = TRUE)

tapply(dt$Age, dt$Sex, "sd", na.rm = TRUE)


#### ---- EXERCICE n° 2 ---- ####

## Est-ce que les femmes âgées (>=60 ans) ont moins de force de Handgrip que les femmes plus jeunes ? Que concluez vous ?
# Faites la même chose pour les hommes





#### ____ 4. Représenter graphiquement ses données ____ ####
#### _ 4.1. Les données catégorielles _ ####

# Exemple, on veut le nombre d'observation d'homme et de femme
nF = nrow(dt[dt$Sex=="F",])
nM = nrow(dt[dt$Sex=="M",])

barplot(c(nF,nM))

# Version pimpée
barplot(c(nF,nM),
        names.arg = c("Femmes","Hommes"),   # Nom des colonnes
        col = c("pink","blue"),             # Couleurs (désolé pour les clichés)
        border = "white",                   # Bords des colonnes
        xlab = "Sexes",             
        ylab = "Effectif (n)",
        horiz = FALSE)                      # horizontal ou vertical


#### ---- EXERCICE n° 3 ---- ####
# Seulement au sein de la première visite (No Sesion), 
# représentez le POURCENTAGE d'individu sarcopénique chez les femmes et les hommes





#### __ 4.2. Les données continues __ ####

library(ggplot2)
# Ressources GGPLOT 2 : https://rstudio.github.io/cheatsheets/data-visualization.pdf

# Identifier une distribution
# _ 4.1. L'histogram _ #

hist(dt$Age)                        # Possibilité simple et efficace

ggplot(data = dt, aes(x=Age)) +     # Possibilité beaucoup plus modulable, exemple :
  geom_histogram()  


ggplot(data = dt, aes(x=Age, fill=Sex)) +    # En fonction du sexe
  geom_histogram()                           # Les COLONNES les unes sur les autres

ggplot(data = dt, aes(x=Age, fill=Sex)) +    # En fonction du sexe
  geom_histogram(position="dodge")           # les COLONNES l'une à coté des autres

# Un peu plus pimpé

ggplot(data = dt, aes(x=Age, fill=Sex)) +    # En fonction du sexe
  geom_histogram(binwidth = 5,               # Une barre = 5 ans
                 position="dodge", 
                 color = "black")  +         # Contours noir
  scale_fill_manual(values = c("#CD2990","#008B8B"),
                    labels = c("Femmes","Hommes"),
                    name="Sexe") +
  theme_classic() +
  xlab("Age (année)") +
  ylab("Effectif (pour 5 ans)")


#### ---- EXERCICE n°4 ---- ####
# Représentez graphiquement la dispersion de la force musculaire entre les hommes et les femmes






# _ 4.1. Le scatter plot ( x ~ y ) - #

# On veux observer la relation entre l'âge et la force de Handgrip
plot(dt$Age, dt$Handgrip)           # Pratique et rapide, mais peu flexible 

# Version simple
ggplot(data = dt,
       aes(x=Age, y=Handgrip, color = Sex)) +
  geom_point() 

# Version utilisable
ggplot(data = dt,
       aes(x=Age, y=Handgrip, color = Sex)) +
  geom_point() +
  scale_color_manual(values = c("#CD2990","#008B8B"),
                     labels = c("Femmes","Hommes"),
                     name="Sexe") +
  theme_classic()

# Version avec tendance linéaires
ggplot(data = dt,
       aes(x=Age, y=Handgrip, color = Sex)) +
  geom_point(shape = 21, alpha = 0.5) +
  scale_color_manual(values = c("#CD2990","#008B8B"),
                     labels = c("Femmes","Hommes"),
                     name="Sexe") +
  geom_smooth(method = "lm") +
  theme_classic()

# Version HARD (tendance linéaire par sexe, en fonction de la maladie) et de la masse maigre
ggplot(data = dt[which(dt$eGFR_IRCavancee != ""),],
       aes(x=Age, y=Handgrip, 
           color = Sex,               # Couleur des points
           size = Lean.Mass_kg)) +    # Taille des points (en fonction de la masse maigre)
  geom_point(alpha = 0.3) +
  scale_color_manual(values = c("#CD2990","#008B8B"),
                     labels = c("Femmes","Hommes"),
                     name="Sexe") +
  geom_smooth(method = "lm") +
  theme_classic() + 
  facet_wrap(~dt[which(dt$eGFR_IRCavancee != ""),]$eGFR_IRCavancee) +
  xlab("Age (année)") +
  ylab("Force de préhension (kg)")



#### ---- Exercice n°5 ---- ####
# Représentez graphiquement la relation entre la force musculaire et la masse maigre
# En dissociant la COULEUR des points avec le stade de la maladie (eGFR Stage)
# En représentant la tendance linéaire (entre force et LM) pour chaque groupe 





#### ___ 5. Supplément ___ ####
#               : Résumé et 
#                 mise en application        

# Possibilité de visualisation de la force musculaire entre les sexes : 

# _ Possibilité 1: L'histogram

ggplot(dt, aes(x=HandgripN, fill = Sex)) + 
  geom_histogram(binwidth = 5,
                 position = "identity",
                 color = "black", 
                 alpha = 0.2) +
  theme_classic() +
  ylab("Effectifs (n)") + 
  xlab("Force de préhension (N)") +
  scale_fill_manual(values = c("red","blue"),
                    name = "Sexe")


# Possibilité 1: La densité (donc proportion relatives)

ggplot(dt, aes(x=HandgripN, fill = Sex)) + 
  geom_density(outline.type = "full",
               color = "white", 
               alpha = 0.2,
               size = 2) +
  theme_classic() +
  ylab("Propostion") + 
  xlab("Force de préhension (N)") +
  scale_fill_manual(values = c("red","blue"),
                    name = "Sexe")

# Possibilité 3: Le Box plot avec les points

ggplot(dt, 
       aes(x=Sex, y=HandgripN, fill = Sex)) +
  geom_jitter(width = 0.1,             # Jitter permet de représenter un nuage sur un axe 
              alpha = 0.1,
              color = "grey70") +                             # Layer 2
  geom_boxplot(outlier.alpha = 0,      # Suppression des point outliers
               alpha = 0.5,
               size = 1) +           # Layer 3
  theme_classic() +
  ylab("Force de préhension (N)") +
  xlab("Sexe")

# install.packages(ggrain)
library(ggrain)

ggplot(dt, 
       aes(x=Sex, y=HandgripN, fill = Sex)) +
  geom_rain(alpha = 0.2,
            rain.side = "r") +
  theme_classic() +
  scale_fill_manual(values = c("red","blue"),
                    name = "Sexe") +
  xlab("Sexe") +
  ylab("Force de préhension (N)")



# Possibilité n°4

#install.packages(ggridges)
library(ggridges)

ggplot(dt, 
       aes(y=Sex, x=HandgripN, fill = stat(x), color = Sex)) +
  geom_density_ridges_gradient(scale = 3, 
                               size = 1) +
  scale_fill_viridis_c(option = "C", name = "Force (N)") +
  scale_color_manual(values = c("red","blue"),
                     name = "Sexe") +
  theme_classic() +
  xlab("Sexe") +
  ylab("Force de préhension (N)")



## En observant les distributions de la force en fonction du sexe, 
#  Est-il possible de conclure à une différence entre les groupes ? 

# Si on reprend la distribution : 
plt1 = ggplot(dt, aes(x=HandgripN, fill = Sex)) + 
  geom_density(color = "black", 
               alpha = 0.5) +
  theme_classic() +
  ylab("Proportion") + 
  xlab("Force de préhension (N)") +
  scale_fill_manual(values = c("red","blue"),
                    name = "Sexe")
plt1


# On ajoute graphiquement les moyennes : 

mn  = tapply(dt$HandgripN, dt$Sex, 'mean', na.rm = TRUE)    # Moyennes
sds = tapply(dt$HandgripN, dt$Sex, 'sd', na.rm = TRUE)      # Standard déviation

plt2 = plt1 + geom_vline(xintercept = mn, 
                         size = 1.5)
plt2

# Et les écarts type (dans les zones grises)

plt3 = ggplot(dt, aes(x=HandgripN, fill = Sex)) + 
  geom_vline(xintercept = mn, 
             size = 1.5) +
  annotate("rect", fill = "grey90", alpha = 0.5,
           xmin = unname(mn-sds), xmax = unname(sds+mn), 
           ymin = c(0,0), ymax = c(0.008,0.008)) +
  geom_density(color = "black", 
               alpha = 0.5) +
  theme_classic() +
  ylab("Proportion") + 
  xlab("Force de préhension (N)") +
  scale_fill_manual(values = c("red","blue"),
                    name = "Sexe") 

plt3


# Est-ce qu'on peut conclure à une différence statistique ? 

# Pour répondre à cette question, on va : ;

# Calculer la probabilité 
# de retrouver une valeur d'un groupe (e.g., F) au moins aussi extrême
# par rapport à un autre groupe (e.g., M), 
# dans l'hypothèse ou les 2 groupes sont égaux (c.a.d. exactement les mêmes moyennes attendues). 

# Test T
t.test(dt$Handgrip ~ dt$Sex)      # Les données de Handgrip EN FONCTION ( ~ ) du sexe

# Regardez la probabilité, que concluez vous ? 

# Situation moins favorable : 
dt2 = dt
dt2[dt2$Sex == "F",]$HandgripN = dt2[dt$Sex == "F",]$HandgripN + 100

mn  = tapply(dt2$HandgripN, dt2$Sex, 'mean', na.rm = TRUE)    # Moyennes
sds = tapply(dt2$HandgripN, dt2$Sex, 'sd', na.rm = TRUE)      # Standard déviation


plt4 = ggplot(dt2, aes(x=HandgripN, fill = Sex)) + 
  geom_vline(xintercept = mn, 
             size = 1.5) +
  annotate("rect", fill = "grey90", alpha = 0.5,
           xmin = unname(mn-sds), xmax = unname(sds+mn), 
           ymin = c(0,0), ymax = c(0.008,0.008)) +
  geom_density(color = "black", 
               alpha = 0.5) +
  theme_classic() +
  ylab("Proportion") + 
  xlab("Force de préhension (N)") +
  scale_fill_manual(values = c("red","blue"),
                    name = "Sexe")
plt4


t.test(dt2$HandgripN ~ dt2$Sex)

# Dans ce contexte, que concluez vous ? 



